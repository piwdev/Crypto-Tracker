# Generated by Django 4.2.7 on 2025-09-22 04:00

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import api.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user account should be considered active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('username', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('name', models.CharField(max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_login_at', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'users',
            },
            managers=[
                ('objects', api.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Coin',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('symbol', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=100)),
                ('image', models.TextField(blank=True, null=True)),
                ('current_price', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True)),
                ('high_24h', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True)),
                ('low_24h', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True)),
                ('price_change_24h', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True)),
                ('price_change_percentage_24h', models.DecimalField(blank=True, decimal_places=6, max_digits=10, null=True)),
                ('market_cap', models.BigIntegerField(blank=True, null=True)),
                ('market_cap_rank', models.IntegerField(blank=True, null=True)),
                ('market_cap_change_24h', models.BigIntegerField(blank=True, null=True)),
                ('market_cap_change_percentage_24h', models.DecimalField(blank=True, decimal_places=6, max_digits=10, null=True)),
                ('fully_diluted_valuation', models.BigIntegerField(blank=True, null=True)),
                ('total_volume', models.BigIntegerField(blank=True, null=True)),
                ('circulating_supply', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True)),
                ('total_supply', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True)),
                ('max_supply', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True)),
                ('ath', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True)),
                ('ath_change_percentage', models.DecimalField(blank=True, decimal_places=6, max_digits=10, null=True)),
                ('ath_date', models.DateTimeField(blank=True, null=True)),
                ('atl', models.DecimalField(blank=True, decimal_places=8, max_digits=20, null=True)),
                ('atl_change_percentage', models.DecimalField(blank=True, decimal_places=6, max_digits=10, null=True)),
                ('atl_date', models.DateTimeField(blank=True, null=True)),
                ('roi', models.JSONField(blank=True, null=True)),
                ('last_updated', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'coins',
                'ordering': ['market_cap_rank'],
            },
        ),
        migrations.CreateModel(
            name='Bookmark',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('coin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookmarks_coin', to='api.coin')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookmarks_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'bookmarks',
                'ordering': ['-created_at'],
                'unique_together': {('user', 'coin')},
            },
        ),
    ]