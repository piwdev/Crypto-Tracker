name: Deploy Backend to AWS

on:
  push:
    branches: [main]
    paths: ['crypto_backend/**']
  workflow_dispatch:

jobs:
  deploy-backend:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests
      working-directory: crypto_backend
      run: |
        python manage.py test

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-1

    - name: Install EB CLI
      run: |
        pip install awsebcli

    - name: Create application version
      working-directory: crypto_backend
      run: |
        # Create application version
        zip -r ../deploy.zip . -x "*.git*" "*__pycache__*" "*.pyc" "*venv*"
        aws s3 cp ../deploy.zip s3://${{ secrets.EB_BUCKET_NAME }}/deploy-$(date +%Y%m%d-%H%M%S).zip
        
    - name: Deploy to Elastic Beanstalk
      working-directory: crypto_backend
      run: |
        # Check if environment exists, if not create it
        if ! eb status ${{ secrets.EB_ENVIRONMENT_NAME }} 2>/dev/null; then
          echo "Environment doesn't exist, creating..."
          eb create ${{ secrets.EB_ENVIRONMENT_NAME }} --instance-types t3.micro --database.engine postgres --database.instance db.t3.micro --database.username cryptouser
        else
          echo "Environment exists, deploying..."
          eb deploy ${{ secrets.EB_ENVIRONMENT_NAME }}
        fi