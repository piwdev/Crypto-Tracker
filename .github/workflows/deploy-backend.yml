name: Deploy Backend to AWS

on:
  push:
    branches: [main]
    paths: ['crypto_backend/**']
  workflow_dispatch:

jobs:
  deploy-backend:
    runs-on: ubuntu-latest
    

    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests
      working-directory: crypto_backend
      run: |
        # Run basic syntax and import checks
        python -m py_compile crypto_backend/settings.py
        python -m py_compile crypto_backend/urls.py
        python -m py_compile api/models.py
        python -m py_compile api/views.py
        echo "✅ Python syntax checks passed"
        
        # Try to run Django checks
        python manage.py check --settings=crypto_backend.test_settings
        echo "✅ Django system checks passed"
        
        # Run a simple test to verify Django setup
        python -c "
        import os
        os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'crypto_backend.test_settings')
        import django
        django.setup()
        from django.contrib.auth.models import User
        print('✅ Django setup successful')
        "

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-1

    - name: Install EB CLI
      run: |
        pip install awsebcli


    - name: Deploy to Elastic Beanstalk
      working-directory: crypto_backend
      run: |
        # Create deployment package
        echo "Creating deployment package..."
        zip -r ../deploy-$(date +%Y%m%d-%H%M%S).zip . -x "*.git*" "*__pycache__*" "*.pyc" "*venv*" "*.elasticbeanstalk*" "*.DS_Store*"
        
        # Get the zip file name
        DEPLOY_ZIP=$(ls ../deploy-*.zip | head -1)
        echo "Created deployment package: $DEPLOY_ZIP"
        
        # Create application version
        VERSION_LABEL="github-actions-$(date +%Y%m%d-%H%M%S)"
        echo "Creating application version: $VERSION_LABEL"
        
        aws s3 cp $DEPLOY_ZIP s3://elasticbeanstalk-ap-northeast-1-$(aws sts get-caller-identity --query Account --output text)/
        
        aws elasticbeanstalk create-application-version \
          --application-name crypto-tracker-api \
          --version-label $VERSION_LABEL \
          --source-bundle S3Bucket="elasticbeanstalk-ap-northeast-1-$(aws sts get-caller-identity --query Account --output text)",S3Key="$(basename $DEPLOY_ZIP)" \
          --region ap-northeast-1
        
        # Deploy to environment
        echo "Deploying to environment: ${{ secrets.EB_ENVIRONMENT_NAME }}"
        aws elasticbeanstalk update-environment \
          --application-name crypto-tracker-api \
          --environment-name ${{ secrets.EB_ENVIRONMENT_NAME }} \
          --version-label $VERSION_LABEL \
          --region ap-northeast-1
        
        # Wait for deployment to complete
        echo "Waiting for deployment to complete..."
        aws elasticbeanstalk wait environment-updated \
          --application-name crypto-tracker-api \
          --environment-names ${{ secrets.EB_ENVIRONMENT_NAME }} \
          --region ap-northeast-1
        
        echo "✅ Deployment completed successfully!"